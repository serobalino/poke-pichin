{"version":3,"sources":["reportWebVitals.js","services/api.js","services/pokemons.js","componets/tabla.js","componets/formCrud.js","componets/crudComponet.js","util/const.js","screens/Home.js","App.js","util/config.js","util/traductor.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","api","axios","create","baseURL","defaults","headers","interceptors","response","use","data","error","notification","message","description","Promise","reject","PREFIJO","PARAMTROS","idAuthor","get","params","formulario","post","id","nrm","put","delete","Tabla","props","consulta","editar","eliminar","columnas","textFiltrar","primaryLabel","onEdit","itemChange","t","useTranslation","useState","setData","filtradas","setFiltradas","columns","setColumns","loading","setLoading","loadingDel","setLoadingDel","consultaAPI","a","catch","actionsColum","record","size","type","icon","EditOutlined","onClick","title","onConfirm","item","success","okText","cancelText","danger","DeleteOutlined","useEffect","filterTable","filter","o","Object","keys","some","k","String","toLowerCase","includes","filtro","index","findIndex","i","map","el","assign","auxCol","obj","show","llave","src","fallback","style","width","height","push","re","dataSource","length","bordered","pagination","pageSize","scroll","y","rowKey","prototype","PropTypes","func","array","string","reload","defaultProps","FormCrud","crear","change","clearVar","Option","Select","setShow","isNew","setIsNew","setTimeout","name","onFinish","values","nuevo","editado","initialValues","gutter","span","className","c","edit","sort","b","formPos","Item","label","rules","number","min","max","combo","placeholder","j","justify","md","sm","htmlType","SaveOutlined","block","CloseOutlined","CrudComponet","buscar","setBuscar","setItem","setItemChange","prefix","SearchOutlined","value","onChange","e","target","offset","PlusOutlined","PokeTipes","Home","PokeService","consultar","n","actualizar","required","App","path","element","NoMatch","to","Config","idiomaini","idiomas","es","translation","require","i18n","initReactI18next","init","resources","lng","fallbackLng","ReactDOM","render","locale","esEs","document","getElementById"],"mappings":"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","file":"static/js/main.05daa055.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport {notification} from \"antd\";\n\nlet headers = {\n    'Content-Type': 'application/json',\n};\n\n\nconst api = axios.create({\n    baseURL: `https://pokemon-pichincha.herokuapp.com`\n});\n\napi.defaults.headers = headers;\napi.interceptors.response.use(\n    (response) => {\n        return response.data;\n\n    },\n    (error) => {\n        notification.error({\n            message: \"Error\",\n            description: error.message,\n        });\n        return Promise.reject(error?.response?.data ? error.response?.data : error)\n    }\n)\n\nexport default api\n","import api from \"./api\";\n\nconst PREFIJO = 'pokemons';\n\nconst PARAMTROS = {\n    idAuthor: 2\n}\n\nclass PokemonsService {\n\n    consultar() {\n        return api.get(PREFIJO, {\n            params: PARAMTROS\n        });\n    }\n\n    crear(formulario) {\n        const data = {\n            ...PARAMTROS,\n            ...formulario,\n        }\n        return api.post(PREFIJO, data, {\n            params: PARAMTROS\n        });\n    }\n\n    consultarId(id) {\n        return api.get(`${PREFIJO}/${id}`);\n    }\n\n    consultarNroReg(nrm) {\n        return api.get(`${PREFIJO}/${nrm}`, {\n            params: PARAMTROS\n        });\n    }\n\n    actualizar(formulario, id) {\n        const data = {\n            ...PARAMTROS,\n            ...formulario,\n        };\n        return api.put(`${PREFIJO}/${id}`, data);\n    }\n\n    eliminar(formulario) {\n        const id = formulario.id;\n        return api.delete(`${PREFIJO}/${id}`);\n    }\n}\n\nexport default new PokemonsService();\n","import {useEffect, useState} from \"react\";\nimport {Button, Image, notification, Popconfirm, Space, Table} from \"antd\";\nimport PropTypes from \"prop-types\";\nimport {useTranslation} from \"react-i18next\";\nimport {DeleteOutlined, EditOutlined} from \"@ant-design/icons\";\n\nexport default function Tabla(props) {\n    const {consulta, editar, eliminar, columnas, textFiltrar, primaryLabel, onEdit, itemChange} = props;\n    const {t} = useTranslation();\n\n    const [data, setData] = useState([]);\n    const [filtradas, setFiltradas] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingDel, setLoadingDel] = useState(false);\n\n    // const sorterAlp = (a, b) => (isNaN(a) && isNaN(b) ? (a || '').localeCompare(b || '') : a - b);\n    // const sorterNum = (a, b) => (parseFloat(a) - parseFloat(b));\n\n\n    const confirmDelete = (item) => {\n        setLoadingDel(true);\n        eliminar(item).then(() => {\n            consultaAPI()\n            notification.success({\n                message: t('tabla.exito'),\n                description: item[primaryLabel] + t('tabla.eliminado'),\n            });\n            setLoadingDel(false);\n        }).catch(() => {\n            setLoadingDel(false);\n        });\n    }\n\n\n    const consultaAPI = async () => {\n        setLoading(true);\n        await consulta().then((response) => {\n            setData(response);\n            setLoading(false);\n        }).catch(() => {\n            setData([]);\n            setLoading(false);\n        });\n    }\n\n    const filtro = () => {\n        const filterTable = data.filter(o =>\n            Object.keys(o).some(k =>\n                String(o[k])\n                    .toLowerCase()\n                    .includes(textFiltrar.toLowerCase())\n            )\n        );\n        setFiltradas(filterTable);\n    };\n\n    const actionsColum = (record) => (\n        <Space size=\"middle\">\n            {!!editar &&\n            <Button\n                type=\"link\"\n                icon={<EditOutlined/>}\n                onClick={() => onEdit(record)}\n            />}\n            {!!eliminar &&\n            <Popconfirm\n                title={t('tabla.confirmar') + record[primaryLabel]}\n                onConfirm={() => confirmDelete(record)}\n                okText={t('tabla.si')}\n                cancelText={t('tabla.no')}\n            >\n                <Button\n                    type=\"link\"\n                    danger\n                    icon={<DeleteOutlined/>}\n                    loading={loadingDel}\n                />\n            </Popconfirm>}\n        </Space>\n    )\n\n    const imageColum = (item) => (\n        <Space size=\"middle\">\n            <Image\n                src={item}\n                fallback=\"https://www.analyticdesign.com/wp-content/uploads/2018/07/unnamed.gif\"\n                style={{\n                    width: 30,\n                    height: 30\n                }}\n            />\n        </Space>\n    )\n\n\n    useEffect(() => {\n        filtro();\n        // eslint-disable-next-line\n    }, [textFiltrar, data])\n\n    useEffect(() => {\n        if (itemChange?.id) {\n            const index = data.findIndex(i => i.id === itemChange.id);\n            if (index > 0) {\n                setData(\n                    data.map(el => (el.id === itemChange.id ? Object.assign({}, el, itemChange) : el))\n                );\n            } else {\n                setData(i => [...i, itemChange]);\n            }\n        }\n        // eslint-disable-next-line\n    }, [itemChange])\n\n    useEffect(() => {\n        let auxCol = []\n        let obj = {};\n        columnas.map((i) => {\n            if (i.show) {\n                obj['title'] = t('pokemons.' + i.llave);\n                obj['dataIndex'] = i.llave;\n                obj['key'] = i.llave;\n                // obj['sorter'] = (a,b)=>(a-b);\n                if (i.llave === 'image') {\n                    obj['render'] = (a) => imageColum(a)\n                }\n                auxCol.push(obj);\n                obj = {};\n            }\n            return i;\n        })\n        if (eliminar || editar) {\n            obj['title'] = t('tabla.aciones');\n            obj['key'] = 'acciones';\n            obj['render'] = (a, re) => actionsColum(re);\n            auxCol.push(obj);\n        }\n        setColumns(auxCol);\n        // eslint-disable-next-line\n    }, [columnas, t])\n\n    useEffect(() => {\n        const consultaAjax = () => consultaAPI()\n        if (consulta) {\n            consultaAjax();\n        }\n        // eslint-disable-next-line\n    }, [consulta])\n\n    return (\n        <Table\n            columns={columns}\n            dataSource={filtradas.length ? filtradas : data}\n            bordered={true}\n            size=\"small\"\n            pagination={{pageSize: 5}}\n            scroll={{y: 240}}\n            loading={loading}\n            rowKey=\"id\"\n        />\n    );\n}\nTabla.prototype = {\n    consulta: PropTypes.func,\n    editar: PropTypes.func,\n    eliminar: PropTypes.func,\n    columnas: PropTypes.array,\n    textFiltrar: PropTypes.string,\n    primaryLabel: PropTypes.string,\n    onEdit: PropTypes.func,\n    reload: PropTypes.func,\n}\nTabla.defaultProps = {\n    columnas: [],\n    textFiltrar: '',\n    primaryLabel: 'name',\n    onEdit: () => {\n\n    }\n}\n","import {Button, Card, Col, Form, Input, notification, Row, Select, Slider} from \"antd\";\nimport {CloseOutlined, SaveOutlined} from \"@ant-design/icons\";\nimport {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport PropTypes from \"prop-types\";\n\nexport default function FormCrud(props) {\n    const {item, primaryLabel, columnas, crear, editar, change, clearVar} = props;\n    const {t} = useTranslation();\n    const {Option} = Select;\n\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [isNew, setIsNew] = useState(true);\n\n    const onFinish = (values) => {\n        setLoading(true);\n        if (isNew) {\n            crear(values).then((nuevo) => {\n                setLoading(false);\n                notification.success({\n                    message: t('tabla.exito'),\n                    description: values[primaryLabel] + t('form.save'),\n                });\n                change(nuevo);\n                setShow(false);\n                clearVar()\n            }).catch(() => {\n                setLoading(false);\n            })\n        } else {\n            editar(values, item.id).then((editado) => {\n                setLoading(false);\n                notification.success({\n                    message: t('tabla.exito'),\n                    description: t('form.edit') + values[primaryLabel],\n                });\n                change(editado);\n                setShow(false);\n                clearVar()\n            }).catch(() => {\n                setLoading(false);\n            })\n        }\n    };\n\n    const title = () => (\n        <h3 className=\"titulo\">{isNew ? t('form.nuevo') : item[primaryLabel]}</h3>\n    )\n\n    useEffect(() => {\n        setShow(false);\n        if (item) {\n            setIsNew(!item?.id);\n            setTimeout(() => {\n                setShow(true);\n            }, 50);\n        }\n    }, [item])\n\n    return (\n        <div>\n            {show &&\n            <Card>\n                <Form\n                    name=\"form\"\n                    onFinish={onFinish}\n                    initialValues={item}\n                >\n                    <Row gutter={[40, 16]}>\n                        <Col span={24}>\n                            {title()}\n                        </Col>\n                        {columnas.filter(c => c?.edit).sort((a, b) => a.formPos - b.formPos).map(i => (\n                            <Col span={12} key={'col-' + i.llave}>\n                                <Form.Item name={i.llave} label={t('pokemons.' + i.llave)} rules={i.rules}>\n                                    {\n                                        i.number ?\n                                            <Slider min={0} max={100}/> :\n                                            !i.combo ? <Input placeholder={t('form.place.' + i.llave)}/> :\n                                                <Select placeholder={t('form.place.' + i.llave)}>\n                                                    {i.combo.map(j => (\n                                                        <Option key={j}>{j}</Option>\n                                                    ))}\n                                                </Select>\n                                    }\n                                </Form.Item>\n                            </Col>))\n                        }\n                    </Row>\n                    <Row justify=\"center\" gutter={[40]}>\n                        <Col md={{span: 4}} sm={{span: 12}}>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined/>} block loading={loading}>\n                                    {t('form.guardar')}\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                        <Col md={{span: 4}} sm={{span: 12}}>\n                            <Form.Item>\n                                <Button type=\"primary\" icon={<CloseOutlined/>} block onClick={() => setShow(false)}>\n                                    {t('form.cancelar')}\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Card>}\n        </div>\n    )\n}\nFormCrud.prototype = {\n    editar: PropTypes.func,\n    crear: PropTypes.func,\n    columnas: PropTypes.array,\n    textFiltrar: PropTypes.string,\n    primaryLabel: PropTypes.string,\n    change: PropTypes.func,\n    clearVar: PropTypes.func,\n}\nFormCrud.defaultProps = {\n    columnas: [],\n    textFiltrar: '',\n    primaryLabel: 'name',\n}\n","import {Button, Col, Input, Row} from \"antd\";\nimport {PlusOutlined, SearchOutlined} from \"@ant-design/icons\";\nimport Tabla from \"./tabla\";\nimport {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport FormCrud from \"./formCrud\";\nimport PropTypes from \"prop-types\";\n\nexport default function CrudComponet(props) {\n    const {consulta, crear, editar, eliminar, columnas, primaryLabel} = props;\n    const {t} = useTranslation();\n\n    const [buscar, setBuscar] = useState('');\n    const [item, setItem] = useState(null);\n    const [itemChange, setItemChange] = useState(null);\n\n    const nuev = () => {\n        setItem({});\n    }\n\n    const edit = (item) => {\n        setItem(item);\n    }\n\n\n    return (\n        <div>\n            <Row>\n                <Col span={24}>\n                    <h3>{t('listado')}</h3>\n                </Col>\n            </Row>\n            <Row justify=\"center\" gutter={[16, 16]}>\n                <Col md={{span: 6}} sm={{span: 12}}>\n                    <Input\n                        placeholder={t('search')}\n                        prefix={<SearchOutlined/>}\n                        value={buscar}\n                        onChange={(e) => setBuscar(e.target.value)}\n                    />\n                </Col>\n                <Col md={{span: 3, offset: 15}} sm={{span: 12, offset: 0}}>\n                    <Button\n                        type=\"primary\"\n                        icon={<PlusOutlined/>}\n                        block\n                        onClick={() => nuev()}\n                    >Nuevo</Button>\n                </Col>\n                <Col span={24}>\n                    <Tabla\n                        textFiltrar={buscar}\n                        consulta={consulta}\n                        eliminar={eliminar}\n                        editar={editar}\n                        onEdit={edit}\n                        columnas={columnas}\n                        primaryLabel={primaryLabel}\n                        itemChange={itemChange}\n                    />\n                </Col>\n                <Col span={24}>\n                    <FormCrud\n                        item={item}\n                        primaryLabel={primaryLabel}\n                        columnas={columnas}\n                        crear={crear}\n                        editar={editar}\n                        change={(value) => setItemChange(value)}\n                        clearVar={() => setItem(null)}\n                    />\n                </Col>\n            </Row>\n        </div>\n    );\n}\nCrudComponet.prototype = {\n    consulta: PropTypes.func,\n    editar: PropTypes.func,\n    eliminar: PropTypes.func,\n    crear: PropTypes.func,\n    columnas: PropTypes.array,\n    textFiltrar: PropTypes.string,\n    primaryLabel: PropTypes.string,\n}\nCrudComponet.defaultProps = {\n    columnas: [],\n    textFiltrar: '',\n    primaryLabel: 'name',\n}\n","export const PokeTipes = ['water', 'fire','normal','bug','poison'];\n","import {PokeService} from \"../services\";\nimport CrudComponet from \"../componets/crudComponet\";\nimport {PokeTipes} from \"../util/const\";\n\n\nexport default function Home() {\n\n    const lst = () => PokeService.consultar();\n    const del = (i) => PokeService.eliminar(i);\n    const upd = (n, id) => PokeService.actualizar(n, id);\n    const cre = (n) => PokeService.crear(n);\n\n    return (\n        <CrudComponet\n            consulta={lst}\n            eliminar={del}\n            editar={upd}\n            crear={cre}\n            columnas={[\n                {\n                    llave: 'name',\n                    rules: [{\n                        required: true,\n                    }],\n                    edit: true,\n                    show: true,\n                    number: false,\n                    formPos: 1,\n                },\n                {\n                    llave: 'image',\n                    rules: [{\n                        required: true,\n                    }, {\n                        type: \"url\",\n                    }],\n                    edit: true,\n                    show: true,\n                    number: false,\n                    formPos: 3,\n                },\n                {\n                    llave: 'attack',\n                    rules: [{\n                        required: true,\n                    }],\n                    edit: true,\n                    show: true,\n                    number: true,\n                    formPos: 2,\n                },\n                {\n                    llave: 'defense',\n                    rules: [{\n                        required: true,\n                    }],\n                    edit: true,\n                    show: true,\n                    number: true,\n                    formPos: 4,\n                },\n                {\n                    llave: 'hp',\n                    rules: [{\n                        required: true,\n                    }],\n                    edit: true,\n                    show: false,\n                    number: true,\n                    formPos: 6,\n                },\n                {\n                    llave: 'type',\n                    rules: [{\n                        required: true,\n                    }],\n                    edit: true,\n                    show: false,\n                    number: false,\n                    formPos: 5,\n                    combo: PokeTipes,\n                }\n            ]}\n        />\n    );\n}\n","import * as React from \"react\";\nimport {Routes, Route, Link} from \"react-router-dom\";\nimport Home from \"./screens/Home\";\n\nexport default function App() {\n\n\n    return (\n        <Routes>\n            <Route path=\"/poke-pichin\">\n                <Route index element={<Home/>}/>\n                <Route path=\"*\" element={<NoMatch/>}/>\n            </Route>\n        </Routes>\n    );\n}\n\nfunction NoMatch() {\n    return (\n        <div>\n            <h2>No hay nada aquí</h2>\n            <p>\n                <Link to=\"/\">Volver al Inicio</Link>\n            </p>\n        </div>\n    );\n}\n","export const Config = {\n    idiomaini: 'es',\n    idiomas: {\n        es: {\n            translation: require(\"../lang/es.json\"),\n        }\n    }\n}\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\nimport {Config} from \"./config\";\n\ni18n.use(initReactI18next).init({\n    resources: Config.idiomas,\n    lng: Config.idiomaini,\n    fallbackLng: Config.idiomaini,\n});\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport './assets/index.css';\nimport \"antd/dist/antd.less\";\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\";\nimport './util/traductor';\n\nimport {ConfigProvider} from 'antd';\nimport esEs from 'antd/lib/locale/es_ES';\n\nReactDOM.render(\n    <BrowserRouter>\n        <ConfigProvider locale={esEs}>\n            <App/>\n        </ConfigProvider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n"],"sourceRoot":""}